{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","DialogItem","path","id","className","s","dialog","active","to","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","AddMessageForm","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,0BAA0B,OAAS,0B,2HCK3PC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACE,GACpB,OACG,uBAAMC,SAAUD,EAAME,aAAtB,UACG,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,iBAAiBC,YAAY,qBAC5DC,SAAU,CAAEC,IAAUb,OAE1B,8BACE,kD,0BCFGc,EAVI,SAACV,GAEjB,IAAIW,EAAO,YAAcX,EAAMY,GAC/B,OACG,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACO,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBX,EAAMM,UCCxBY,EANC,SAAClB,GACd,OACG,qBAAKa,UAAWC,IAAEK,QAAlB,SAA4BnB,EAAMmB,WC2BzBC,EA1BA,SAACpB,GAEd,IAAIqB,EAAQrB,EAAMsB,YACdC,EAAkBF,EAAMG,QAAQC,KAAK,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBM,GAAIc,EAAEd,IAAZc,EAAEd,OAC7Ee,EAAmBN,EAAMO,SAASH,KAAK,SAACI,GAAD,OAAO,cAAC,EAAD,CAAUV,QAASU,EAAEV,SAAcU,EAAEjB,OAClES,EAAMS,eAOzB,OACA,sBAAKjB,UAAWC,IAAEU,QAAlB,UACE,qBAAKX,UAAWC,IAAEiB,aAAlB,SACIR,IAEJ,qBAAKV,UAAWC,IAAEc,SAAlB,SACE,qCAAQD,OAEV,cAACK,EAAD,CAAgB/B,SAZA,SAACgC,GACnBjC,EAAMkC,YAAYD,EAAOH,uBCwBdK,sBAAQC,aAbD,SAACf,GACnB,MAAO,CACLC,YAAaD,EAAMC,gBAGA,SAACe,GACtB,MAAO,CACLH,YAAa,SAACJ,GACZO,EAASC,YAAmBR,SAKiCS,IAAtDJ,CAAwEf","file":"static/js/4.206623a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2AyB6\",\"dialogsItem\":\"Dialogs_dialogsItem__rmEEY\",\"dialogsItems\":\"Dialogs_dialogsItems__oKmN2\",\"active\":\"Dialogs_active__1KJps\",\"messeges\":\"Dialogs_messeges__2Cw5d\",\"messages\":\"Dialogs_messages__3KRPt\",\"mesege\":\"Dialogs_mesege__1dRh_\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageform = (props) => {\r\n    return(\r\n       <form onSubmit={props.handleSubmit}> \r\n          <div>\r\n            <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\"\r\n              validate={[ required, maxLength50 ]} />\r\n          </div>\r\n          <div>\r\n            <button >Send</button>  \r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageform\"})(AddMessageform);","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n   let path = \"/dialogs/\" + props.id\r\n   return(\r\n      <div className={s.dialog + \" \" + s.active}>\r\n             <NavLink to={path}>{props.name}</NavLink> \r\n          </div>\r\n   )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) =>{\r\n   return(\r\n      <div className={s.message}>{props.message}</div>\r\n   )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\nconst Dialogs =(props) =>{\r\n  \r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map( (d) => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  let messagesElements = state.messages.map( (m) => <Message  message={m.message} key={m.id}/>);\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  \r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n    return  (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n         {dialogsElements} \r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>  {messagesElements}</div>         \r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n    )  \r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n/* const DialogsContainer =() =>{\r\n  return (\r\n    <StoreContext.Consumer>\r\n    {(store) => {\r\n      let state = store.getState().dialogsPage;\r\n      let onSendMessageClick =() => {\r\n      store.dispatch(sendMessageCreator());\r\n      }  \r\n      let onNewMassageChange = (body) => {\r\n      store.dispatch(updeteNewMessageBodyCreator(body));\r\n      }\r\n  return <Dialogs sendMessage={onSendMessageClick}\r\n            updeteNewMessageBody={onNewMassageChange}\r\n            dialogsPage={state} />\r\n            }\r\n      }\r\n      </StoreContext.Consumer> \r\n   )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n      }\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}