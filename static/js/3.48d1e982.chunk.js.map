{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","p","postsBlok","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updeteStatus","onChange","e","target","value","ProfileInfo","profile","descriptionBlok","photos","large","fullName","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.48d1e982.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlok\":\"ProfileInfo_descriptionBlok__2TJpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlok\":\"MyPosts_postsBlok__195rF\",\"posts\":\"MyPosts_posts__1wvzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2mC6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1KjC9\"};","\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post =(props) =>{\r\n    return ( \r\n        <div className={s.item}>\r\n          <img src=\"https://cdn.pixabay.com/photo/2016/09/22/16/38/avatar-1687700_960_720.jpg\"/> \r\n            {props.message}\r\n           <div>\r\n             <span>like</span> {props.likesCount}\r\n           </div>   \r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport  {maxLengthCreator, required}  from  \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n      console.log(\"RENDER YO\")\r\n      let postsElements = [...props.posts].reverse().map((p) => <Post message={p.message} likesCount={p.likesCount} />)\r\n    \r\n      let newPostElement = React.createRef();\r\n\r\n      let onAddPost =(values) => {\r\n         props.addPost(values.newPostText);\r\n      }\r\n   \r\n   return (\r\n      <div className={s.postsBlok} >\r\n         <h3>My post</h3>\r\n        { <AddNewPostFormRedux onSubmit={onAddPost} /> }\r\n         <div className={s.posts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   )\r\n   \r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n         <Field component={Textarea} name=\"newPostText\" placeholder=\"Post message\" \r\n            validate={[ required, maxLength10 ]} />\r\n         </div>\r\n         <div>\r\n            <button >Add Post</button>  \r\n         </div>\r\n    </form>\r\n   )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\n/* const MyPostsContainer =(props) =>{\r\n  return (\r\n    <StoreContext.Consumer> \r\n      {(store) => {\r\n        let state = store.getState();\r\n        let addPost =() => {\r\n        store.dispatch(addPostActionCreator());\r\n        }\r\n        let onPostChange = (text) => {\r\n        // let action ={type: \"APDATE-NEW-POST-TEXT\", newText: text};\r\n        let action =updeteNewPostTextActionCreator(text);\r\n        store.dispatch(action);\r\n        }\r\n  return <MyPosts addPost={addPost}\r\n            updateNewPostText={onPostChange} \r\n            posts={state.profilePage.posts} \r\n            newPostText={state.profilePage.newPostText}/>\r\n        }\r\n      }\r\n    </StoreContext.Consumer>\r\n  )\r\n}  */\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) =>{\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updeteStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n\r\n            {!editMode &&\r\n                <div>\r\n                   <span onDoubleClick={activateEditMode} >{props.status || \"-----\"}</span>    \r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                   <input  autoFocus={true} onBlur={deactivateEditMode} \r\n                    onChange={onStatusChange} value={status} />   \r\n                </div>\r\n            }\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo =({profile, status, updeteStatus}) =>{\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n    return ( \r\n    <div>    \r\n    {/*  <div>\r\n        <img src=\"https://thumbs.dreamstime.com/b/environment-earth-day-hands-trees-growing-seedlings-bokeh-green-background-female-hand-holding-tree-nature-field-gra-130247647.jpg\"/>\r\n    </div> */}\r\n      <div className={s.descriptionBlok}>\r\n        <img src={profile.photos.large} />\r\n         <div>\r\n           {profile.fullName}\r\n         </div>\r\n         <ProfileStatusWithHooks status={status} updeteStatus={updeteStatus} />\r\n    </div>\r\n</div>\r\n ) \r\n}\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile =(props) =>{\r\n    return ( \r\n      <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updeteStatus={props.updeteStatus}/>\r\n        <MyPostsContainer />                 \r\n      </div>\r\n    )  \r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {  withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { getUserProfile, getStatus, updeteStatus } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if(!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);    \r\n  }\r\n\r\n  render(){    \r\n    return ( \r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} \r\n        status={this.props.status} updeteStatus={this.props.updeteStatus} />\r\n                         \r\n      </div>\r\n    )  \r\n  }    \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,  \r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updeteStatus}), \r\n  //withAuthRedirect,\r\n  withRouter)\r\n  (ProfileContainer);\r\n\r\n"],"sourceRoot":""}